/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-05-20 01:50:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.idinoproject.web.calendar;
import java.util.Date;

public final class checking_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.1.7.RELEASE.jar", Long.valueOf(1620601565867L));
    _jspx_dependants.put("/WEB-INF/views/layout/header.jsp", Long.valueOf(1620614989283L));
    _jspx_dependants.put("jar:file:/C:/Users/gtlee/Desktop/Project/Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/idinoProject/WEB-INF/lib/spring-webmvc-4.1.7.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1435625228000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.idinoproject.web.calendar");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\" integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<!-- common CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/common/css/common.css\">\r\n");
      out.write("\r\n");
      out.write("<title>출석체크 시스템</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"#\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".cover {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tzoom: 1; .\r\n");
      out.write("\tdisplay: inline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button {\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("}\r\n");
      out.write("/* 기본스타일  */\r\n");
      out.write("table {\r\n");
      out.write("\tbackground-color: #F2F2F2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr {\r\n");
      out.write("\theight: 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tfont-size: 15pt;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("}\r\n");
      out.write("/* 타이틀 스타일 */\r\n");
      out.write("th#title {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-size: 20pt;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcolor: #FFBF00;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 요일 스타일 */\r\n");
      out.write("td.sunday {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td.saturday {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcolor: blue;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td.etcday {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 날짜 스타일 */\r\n");
      out.write("td.sun {\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tfont-size: 15pt;\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td.sat {\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tfont-size: 15pt;\r\n");
      out.write("\tcolor: blue;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td.etc {\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tfont-size: 15pt;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td.redbefore {\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tfont-size: 12pt;\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td.before {\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tfont-size: 12pt;\r\n");
      out.write("\tcolor: gray;\r\n");
      out.write("\tfont-family: D2coding;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(document).on('click', '#btnChoiceForm', function(e) {\r\n");
      out.write("\t\te.preventDefault();\r\n");
      out.write("\t\tlocation.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/choice\"\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$(document).on('click', '#btnLogOutForm', function(e) {\r\n");
      out.write("\t\te.preventDefault();\r\n");
      out.write("\t\tlocation.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/logout\"\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<img src=\"");
      if (_jspx_meth_spring_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("\t\t<div class=button>\r\n");
      out.write("\t\t\t<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.getName()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님안녕하세요</p>\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-sm btn-primary\"\r\n");
      out.write("\t\t\t\tid=\"btnChoiceForm\">출석확인</button>\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-sm btn-primary\"\r\n");
      out.write("\t\t\t\tid=\"btnLogOutForm\">로그아웃</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<article>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t");

			// 컴퓨터 시스템의 년, 월 받아오기
			Date date = new Date();
			int year = date.getYear() + 1900;
			int month = date.getMonth() + 1;

			//	오류사항 걸러주기	
			try {
				year = Integer.parseInt(request.getParameter("year"));
				month = Integer.parseInt(request.getParameter("month"));

				if (month >= 13) {
					year++;
					month = 1;
				} else if (month <= 0) {
					year--;
					month = 12;
				}
			} catch (Exception e) {

			}
			
      out.write("\r\n");
      out.write("\t\t\t<!-- 달력 만들기 -->\r\n");
      out.write("\t\t\t<table width=\"700\" align=\"center\" border=\"1\" cellpadding=\"5\"\r\n");
      out.write("\t\t\t\tcellspacing=\"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<!-- 이전달 버튼 만들기 -->\r\n");
      out.write("\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t");
      out.write(" <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"button\" value=\"이전 달\"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"location.href='?year=");
      out.print(year);
      out.write("&month=");
      out.print(month - 1);
      out.write("'\">\r\n");
      out.write("\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t<!-- 제목 만들기 -->\r\n");
      out.write("\t\t\t\t\t<th id=\"title\" colspan=\"5\">");
      out.print(year);
      out.write('년');
      out.write(' ');
      out.print(month);
      out.write("월</th>\r\n");
      out.write("\t\t\t\t\t<!-- 다음달 버튼 만들기 -->\r\n");
      out.write("\t\t\t\t\t<th><input type=\"button\" value=\"다음 달\"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"location.href='?year=");
      out.print(year);
      out.write("&month=");
      out.print(month + 1);
      out.write("'\">\r\n");
      out.write("\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<!-- 요일 표시칸 만들어주기(단, 토,일요일은 색을 다르게 하기위해 구분해주기) -->\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td class=\"sunday\">일</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"etcday\">월</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"etcday\">화</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"etcday\">수</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"etcday\">목</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"etcday\">금</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"saturday\">토</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 날짜 집어 넣기 -->\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t");

					//	1일의 요일을 계산한다(자주 쓰이기 때문에 변수로 선언해두기)
					int first = calendar.weekDay(year, month, 1);

					//	1일이 출력될 위치 전에 전달의 마지막 날짜들을 넣어주기위해 전 달날짜의 시작일을 계산한다.
					int start = 0;
					start = month == 1 ? calendar.lastDay(year - 1, 12) - first : calendar.lastDay(year, month - 1) - first;

					//	1일이 출력될 위치를 맞추기 위해 1일의 요일만큼 반복하여 전달의날짜를 출력한다.
					for (int i = 1; i <= first; i++) {
						if (i == 1) {
							/* 일요일(빨간색)과 다른날들의 색을 구별주기  */
							out.println("<td class = 'redbefore'>" + (month == 1 ? 12 : month - 1) + "/" + ++start + "</td>");
						} else {
							out.println("<td class = 'before'>" + (month == 1 ? 12 : month - 1) + "/" + ++start + "</td>");

						}
					}

					/* 1일부터 달력을 출력한 달의 마지막 날짜까지 반복하며 날짜를 출력 */
					for (int i = 1; i <= calendar.lastDay(year, month); i++) {
						/* 요일별로 색깔 다르게 해주기위해 td에 class 태그걸어주기 */
						switch (calendar.weekDay(year, month, i)) {
						case 0:
							out.println("<td class ='sun'>" + i + "</td>");
							break;
						case 6:
							out.println("<td class ='sat'>" + i + "</td>");
							break;
						default:
							out.println("<td class ='etc'>" + i + "</td>");
							break;
						}

						/* 출력한 날짜(i)가 토요일이고 그달의 마지막 날짜이면 줄을 바꿔주기 */
						if (calendar.weekDay(year, month, i) == 6 && i != calendar.lastDay(year, month)) {
							out.println("</tr><tr>");
							
						}
					}
					if (calendar.weekDay(year, month, calendar.lastDay(year, month)) != 6) {
						for (int i = calendar.weekDay(year, month, calendar.lastDay(year, month)) + 1; i < 7; i++) {
							out.println("<td></td>");
							out.println("<td></td>");
						}
					}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</article>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f0 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f0_reused = false;
    try {
      _jspx_th_spring_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f0.setParent(null);
      // /WEB-INF/views/checking.jsp(131,12) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setValue("/resources/images/Idino.png");
      int[] _jspx_push_body_count_spring_005furl_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f0 = _jspx_th_spring_005furl_005f0.doStartTag();
        if (_jspx_th_spring_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f0);
      _jspx_th_spring_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f0_reused);
    }
    return false;
  }
}
